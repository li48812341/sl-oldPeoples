---
apiVersion: v1
kind: Service
metadata:
  name: qly-web
  namespace: default
  labels:
    app: qly-web
    version: v0.1-alpha
spec:
  type: NodePort
  ports:
    - name: service
      nodePort: 30060
      port: 3060
      protocol: TCP
      targetPort: 3060
  selector:
    app: qly-web
    version: v0.1-alpha
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: qly-web
    version: v0.1-alpha
  name: qly-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qly-web
      version: v0.1-alpha
  template:
    metadata:
      labels:
        app: qly-web
        version: v0.1-alpha
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - qly-web
              - key: version
                operator: In
                values:
                - v0.1-alpha
            topologyKey: "kubernetes.io/hostname"
      serviceAccount: qly-web
      containers:
      - env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.cmcc.com/library/qly-web:0.1.0
        imagePullPolicy: Always
        name: qly-web
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        #resources:
        #  requests:
        #    cpu: 0.1
        #    memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: True
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: qly-web
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qly-web
  namespace: default
  labels:
    app: qly-web
    version: v0.1-alpha
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: qly-web
    version: v0.1-alpha
  name: qly-web
  namespace: default
data: 
  default.conf: |
    server {
        listen       3060;
        server_name  localhost;
        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS;
        add_header Access-Control-Allow-Headers DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Token,Access-Token;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
        location /api {
            proxy_pass 36.170.63.134:30080;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
  
